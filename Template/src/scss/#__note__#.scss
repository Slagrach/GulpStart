@include avPx('padding-top', 10, 5, 1);
@include avPx('padding-right', 10, 5, 1);
@include avPx('padding-bottom', 10, 5, 1);
@include avPx('padding-left', 10, 5, 1);
;
@include avPx('margin-top', 10, 5, 1);
@include avPx('margin-right', 10, 5, 1);
@include avPx('margin-bottom', 10, 5, 1);
@include avPx('margin-left', 10, 5, 1);

@include aFont(16, 13, 1);


@media only screen and (max-width: 1920px) {
}

@media only screen and (max-width: 1680px) {
}

@media only screen and (max-width: 1366px) {
}

@media only screen and (max-width: 1280px) {
}

@media only screen and (max-width: 1024px) {
}

@media only screen and (max-width: 800px) {
}

@media only screen and (max-width: 768px) {
}

@media only screen and (max-width: 600px) {
}

@media only screen and (max-width: 533px) {
}

@media only screen and (max-width: 360px) {
}

@media only screen and (max-width: 320px) {
}

@media only screen and (max-width: 240px) {
}

@media only screen and (max-width: 176px) {
}


@media all and (orientation: landscape) {
	/* CSS правила для устройства в альбомном режиме */
}

@media all and (orientation: portrait) {
	/* CSS правила для устройства в портретном режиме */
}


/* sm-устройства (больше или равно 576px) */
@media (min-width: 576px) {
	/* CSS для: 576px <= ширины <= 767px */
}

/* md-устройства (больше или равно 768px) */
@media (min-width: 768px) {
	/* CSS для: 768px <= ширины <= 991px */
}

/* lg-устройства (больше или равно 992px) */
@media (min-width: 992px) {
	/* CSS для: 992px <= ширины <= 1119px */
}

/* xl-устройства (больше или равно 1200px) */
@media (min-width: 1200px) {
	/* CSS для: ширины >= 1200px */
}


/* lg-размер (<=1199px) */
@media (max-width: 1199px) {
	/* CSS для ширины от 992px до 1199px */
}

/* md-размер (<=991px) */
@media (max-width: 991px) {
	/* CSS для ширины от 768px до 991px */
}

/* sm-размер (<=768px) */
@media (max-width: 767px) {
	/* CSS для ширины от 576px до 767px */
}

/* xs-размер (<=575px) */
@media (max-width: 575px) {
	/* CSS для ширины до 575px (включительно) */
}


/* xs (<=543px) */
@media (max-width: 575px) {
	...
}

/* sm (>=576 и <=767) */
@media (min-width: 576px) and (max-width: 767px) {
	...
}

/* md (>=768 и <=991) */
@media (min-width: 768px) and (max-width: 991px) {
	...
}

/* lg (>=992 и <=1199) */
@media (min-width: 992px) and (max-width: 1199px) {
	...
}

/* xl (>=1200) */
@media (min-width: 1200px) {
	...
}


/*
sm   (640px)    max-width: 640px;
md   (768px)    max-width: 768px;
lg  (1024px)	max-width: 1024px;
xl  (1280px)	max-width: 1280px;
2xl (1536px)	max-width: 1536px;
*/

/*
$ParentWidth: 100px;
$ValuePercent: 10%;

$ChildPadding = ($ParentWidth)* $ValuePercent;
*/


.my-counter {
	&:before {
		content: '(0' counter(my-couter) ')';
	}

}


/*
1px  = 0.0625rem
2px  = 0.125rem
3px  = 0.1875rem
4px  = 0.25rem
5px  = 0.3125rem
6px  = 0.375rem
7px  = 0.4375rem
8px  = 0.5rem
9px  = 0.5625rem
10px = 0.625rem
11px = 0.6875rem
12px = 0.75rem
13px = 0.8125rem
14px = 0.875rem
15px = 0.9375rem
16px = 1rem (base)
17px = 1.0625rem
18px = 1.125rem
19px = 1.1875rem
20px = 1.25rem
21px = 1.3125rem
22px = 1.375rem
23px = 1.4375rem
24px = 1.5rem
25px = 1.5625rem
26px = 1.625rem
27px = 1.6875
28px = 1.75rem
29px = 1.8125
30px = 1.875rem
31px = 1.9375
32px = 2rem
33px = 2.0625rem
34px = 2.125rem
35px = 2.1875rem
36px = 2.25rem
37px = 2.3125rem
38px = 2.375rem
39px = 2.4375rem
40px = 2.5rem
41px = 2.5625rem
42px = 2.625rem
43px = 2.6875rem
44px = 2.75rem
45px = 2.8125rem
46px = 2.875rem
47px = 2.9375rem
48px = 3rem
64px = 4rem
80px = 5rem
96px = 6rem
112px = 7rem
128px = 8rem
144px = 9rem
160px = 10rem
*/


/*
// например, проверим, соответствует ли указанный медиа-запрос (screen and (max-width: 543px)) устройству
// результат проверки можно получить с помощью свойства matches (true или false)
if (window.matchMedia('screen and (max-width: 543px)').matches) {
// ... действия, если устройство отвечает медиа-запросу
} else {
	  // ... действия, если устройство не соответствует значениям медиа-запроса
}

// для старых браузеров
if (Modernizr.mq('(max-width: 767px)')) {
// ... действия, если устройство соответствует указанному медиа-условию
} else {
	  // ... действия, если устройство не отвечает заданному медиа-условию
  }
*/


/*находит посещенные ссылки*/
&:visited()
	/*находит элементы, помеченные ссылкой*/
&:target()
	/*находит первый дочерний элемент*/
&:first-child()
	/*выбирает заданный дочерний элемент*/
&:nth-child()
	/*находит элемент без контента или без дочерних элементов*/
&:empty()
	/*находит включенные чекбоксы и радиокнопки*/
&:checked()
	/*стилизует пустые поля ввода*/
&:blank()
	/*находит активные input поля*/
&:enabled()
	/*находит неактивные input поля*/
&:disabled()
	/*находит input поля с валидным введенным значением*/
&:required()
	/*находит input поля обязательные для заполнения*/
&:valid()
	/*находит input поля с невалидным введенным значением*/
&:invalid()
	/*находит элементы, проигрывающие аудио или видео*/
&:playing()


/*является*/
&:is()
/*где*/
&:where()
/*имеет*/
&:has()
